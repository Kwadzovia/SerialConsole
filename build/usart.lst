ARM GAS  /tmp/ccBwLu3P.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART2_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART2_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE END 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** /* USART2 init function */
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  30:Core/Src/usart.c **** {
ARM GAS  /tmp/ccBwLu3P.s 			page 2


  29              		.loc 1 30 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  31:Core/Src/usart.c **** 
  32:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  39:Core/Src/usart.c ****   huart2.Instance = USART2;
  38              		.loc 1 39 3 view .LVU1
  39              		.loc 1 39 19 is_stmt 0 view .LVU2
  40 0002 0A48     		ldr	r0, .L5
  41 0004 0A4B     		ldr	r3, .L5+4
  42 0006 0360     		str	r3, [r0]
  40:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 40 3 is_stmt 1 view .LVU3
  44              		.loc 1 40 24 is_stmt 0 view .LVU4
  45 0008 4FF4E133 		mov	r3, #115200
  46 000c 4360     		str	r3, [r0, #4]
  41:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  47              		.loc 1 41 3 is_stmt 1 view .LVU5
  48              		.loc 1 41 26 is_stmt 0 view .LVU6
  49 000e 0023     		movs	r3, #0
  50 0010 8360     		str	r3, [r0, #8]
  42:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  51              		.loc 1 42 3 is_stmt 1 view .LVU7
  52              		.loc 1 42 24 is_stmt 0 view .LVU8
  53 0012 C360     		str	r3, [r0, #12]
  43:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  54              		.loc 1 43 3 is_stmt 1 view .LVU9
  55              		.loc 1 43 22 is_stmt 0 view .LVU10
  56 0014 0361     		str	r3, [r0, #16]
  44:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  57              		.loc 1 44 3 is_stmt 1 view .LVU11
  58              		.loc 1 44 20 is_stmt 0 view .LVU12
  59 0016 0C22     		movs	r2, #12
  60 0018 4261     		str	r2, [r0, #20]
  45:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  61              		.loc 1 45 3 is_stmt 1 view .LVU13
  62              		.loc 1 45 25 is_stmt 0 view .LVU14
  63 001a 8361     		str	r3, [r0, #24]
  46:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  64              		.loc 1 46 3 is_stmt 1 view .LVU15
  65              		.loc 1 46 28 is_stmt 0 view .LVU16
  66 001c C361     		str	r3, [r0, #28]
  47:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  67              		.loc 1 47 3 is_stmt 1 view .LVU17
  68              		.loc 1 47 7 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccBwLu3P.s 			page 3


  69 001e FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71              		.loc 1 47 6 view .LVU19
  72 0022 00B9     		cbnz	r0, .L4
  73              	.L1:
  48:Core/Src/usart.c ****   {
  49:Core/Src/usart.c ****     Error_Handler();
  50:Core/Src/usart.c ****   }
  51:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  52:Core/Src/usart.c **** 
  53:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c **** }
  74              		.loc 1 55 1 view .LVU20
  75 0024 08BD     		pop	{r3, pc}
  76              	.L4:
  49:Core/Src/usart.c ****   }
  77              		.loc 1 49 5 is_stmt 1 view .LVU21
  78 0026 FFF7FEFF 		bl	Error_Handler
  79              	.LVL1:
  80              		.loc 1 55 1 is_stmt 0 view .LVU22
  81 002a FBE7     		b	.L1
  82              	.L6:
  83              		.align	2
  84              	.L5:
  85 002c 00000000 		.word	.LANCHOR0
  86 0030 00440040 		.word	1073759232
  87              		.cfi_endproc
  88              	.LFE130:
  90              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_UART_MspInit
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_UART_MspInit:
  99              	.LVL2:
 100              	.LFB131:
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  58:Core/Src/usart.c **** {
 101              		.loc 1 58 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 32
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		.loc 1 58 1 is_stmt 0 view .LVU24
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 111 0002 88B0     		sub	sp, sp, #32
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 40
  59:Core/Src/usart.c **** 
  60:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccBwLu3P.s 			page 4


 114              		.loc 1 60 3 is_stmt 1 view .LVU25
 115              		.loc 1 60 20 is_stmt 0 view .LVU26
 116 0004 0023     		movs	r3, #0
 117 0006 0393     		str	r3, [sp, #12]
 118 0008 0493     		str	r3, [sp, #16]
 119 000a 0593     		str	r3, [sp, #20]
 120 000c 0693     		str	r3, [sp, #24]
 121 000e 0793     		str	r3, [sp, #28]
  61:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 122              		.loc 1 61 3 is_stmt 1 view .LVU27
 123              		.loc 1 61 16 is_stmt 0 view .LVU28
 124 0010 0268     		ldr	r2, [r0]
 125              		.loc 1 61 5 view .LVU29
 126 0012 184B     		ldr	r3, .L11
 127 0014 9A42     		cmp	r2, r3
 128 0016 01D0     		beq	.L10
 129              	.LVL3:
 130              	.L7:
  62:Core/Src/usart.c ****   {
  63:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
  64:Core/Src/usart.c **** 
  65:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
  66:Core/Src/usart.c ****     /* USART2 clock enable */
  67:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  68:Core/Src/usart.c **** 
  69:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  70:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  71:Core/Src/usart.c ****     PA2     ------> USART2_TX
  72:Core/Src/usart.c ****     PA3     ------> USART2_RX
  73:Core/Src/usart.c ****     */
  74:Core/Src/usart.c ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
  75:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  76:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  77:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  79:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  80:Core/Src/usart.c **** 
  81:Core/Src/usart.c ****     /* USART2 interrupt Init */
  82:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
  83:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
  84:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
  85:Core/Src/usart.c **** 
  86:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
  87:Core/Src/usart.c ****   }
  88:Core/Src/usart.c **** }
 131              		.loc 1 88 1 view .LVU30
 132 0018 08B0     		add	sp, sp, #32
 133              	.LCFI3:
 134              		.cfi_remember_state
 135              		.cfi_def_cfa_offset 8
 136              		@ sp needed
 137 001a 10BD     		pop	{r4, pc}
 138              	.LVL4:
 139              	.L10:
 140              	.LCFI4:
 141              		.cfi_restore_state
  67:Core/Src/usart.c **** 
ARM GAS  /tmp/ccBwLu3P.s 			page 5


 142              		.loc 1 67 5 is_stmt 1 view .LVU31
 143              	.LBB2:
  67:Core/Src/usart.c **** 
 144              		.loc 1 67 5 view .LVU32
 145 001c 0024     		movs	r4, #0
 146 001e 0194     		str	r4, [sp, #4]
  67:Core/Src/usart.c **** 
 147              		.loc 1 67 5 view .LVU33
 148 0020 03F5FA33 		add	r3, r3, #128000
 149 0024 1A6C     		ldr	r2, [r3, #64]
 150 0026 42F40032 		orr	r2, r2, #131072
 151 002a 1A64     		str	r2, [r3, #64]
  67:Core/Src/usart.c **** 
 152              		.loc 1 67 5 view .LVU34
 153 002c 1A6C     		ldr	r2, [r3, #64]
 154 002e 02F40032 		and	r2, r2, #131072
 155 0032 0192     		str	r2, [sp, #4]
  67:Core/Src/usart.c **** 
 156              		.loc 1 67 5 view .LVU35
 157 0034 019A     		ldr	r2, [sp, #4]
 158              	.LBE2:
  67:Core/Src/usart.c **** 
 159              		.loc 1 67 5 view .LVU36
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 160              		.loc 1 69 5 view .LVU37
 161              	.LBB3:
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 162              		.loc 1 69 5 view .LVU38
 163 0036 0294     		str	r4, [sp, #8]
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 164              		.loc 1 69 5 view .LVU39
 165 0038 1A6B     		ldr	r2, [r3, #48]
 166 003a 42F00102 		orr	r2, r2, #1
 167 003e 1A63     		str	r2, [r3, #48]
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 168              		.loc 1 69 5 view .LVU40
 169 0040 1B6B     		ldr	r3, [r3, #48]
 170 0042 03F00103 		and	r3, r3, #1
 171 0046 0293     		str	r3, [sp, #8]
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 172              		.loc 1 69 5 view .LVU41
 173 0048 029B     		ldr	r3, [sp, #8]
 174              	.LBE3:
  69:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 175              		.loc 1 69 5 view .LVU42
  74:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 176              		.loc 1 74 5 view .LVU43
  74:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 177              		.loc 1 74 25 is_stmt 0 view .LVU44
 178 004a 0C23     		movs	r3, #12
 179 004c 0393     		str	r3, [sp, #12]
  75:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 180              		.loc 1 75 5 is_stmt 1 view .LVU45
  75:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 75 26 is_stmt 0 view .LVU46
 182 004e 0223     		movs	r3, #2
 183 0050 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccBwLu3P.s 			page 6


  76:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 184              		.loc 1 76 5 is_stmt 1 view .LVU47
  77:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 185              		.loc 1 77 5 view .LVU48
  77:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 186              		.loc 1 77 27 is_stmt 0 view .LVU49
 187 0052 0323     		movs	r3, #3
 188 0054 0693     		str	r3, [sp, #24]
  78:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 189              		.loc 1 78 5 is_stmt 1 view .LVU50
  78:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190              		.loc 1 78 31 is_stmt 0 view .LVU51
 191 0056 0723     		movs	r3, #7
 192 0058 0793     		str	r3, [sp, #28]
  79:Core/Src/usart.c **** 
 193              		.loc 1 79 5 is_stmt 1 view .LVU52
 194 005a 03A9     		add	r1, sp, #12
 195 005c 0648     		ldr	r0, .L11+4
 196              	.LVL5:
  79:Core/Src/usart.c **** 
 197              		.loc 1 79 5 is_stmt 0 view .LVU53
 198 005e FFF7FEFF 		bl	HAL_GPIO_Init
 199              	.LVL6:
  82:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 200              		.loc 1 82 5 is_stmt 1 view .LVU54
 201 0062 2246     		mov	r2, r4
 202 0064 2146     		mov	r1, r4
 203 0066 2620     		movs	r0, #38
 204 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 205              	.LVL7:
  83:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 206              		.loc 1 83 5 view .LVU55
 207 006c 2620     		movs	r0, #38
 208 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 209              	.LVL8:
 210              		.loc 1 88 1 is_stmt 0 view .LVU56
 211 0072 D1E7     		b	.L7
 212              	.L12:
 213              		.align	2
 214              	.L11:
 215 0074 00440040 		.word	1073759232
 216 0078 00000240 		.word	1073872896
 217              		.cfi_endproc
 218              	.LFE131:
 220              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 221              		.align	1
 222              		.global	HAL_UART_MspDeInit
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	HAL_UART_MspDeInit:
 229              	.LVL9:
 230              	.LFB132:
  89:Core/Src/usart.c **** 
  90:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  91:Core/Src/usart.c **** {
ARM GAS  /tmp/ccBwLu3P.s 			page 7


 231              		.loc 1 91 1 is_stmt 1 view -0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		.loc 1 91 1 is_stmt 0 view .LVU58
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI5:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
  92:Core/Src/usart.c **** 
  93:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 241              		.loc 1 93 3 is_stmt 1 view .LVU59
 242              		.loc 1 93 16 is_stmt 0 view .LVU60
 243 0002 0268     		ldr	r2, [r0]
 244              		.loc 1 93 5 view .LVU61
 245 0004 084B     		ldr	r3, .L17
 246 0006 9A42     		cmp	r2, r3
 247 0008 00D0     		beq	.L16
 248              	.LVL10:
 249              	.L13:
  94:Core/Src/usart.c ****   {
  95:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
  98:Core/Src/usart.c ****     /* Peripheral clock disable */
  99:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 102:Core/Src/usart.c ****     PA2     ------> USART2_TX
 103:Core/Src/usart.c ****     PA3     ------> USART2_RX
 104:Core/Src/usart.c ****     */
 105:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 106:Core/Src/usart.c **** 
 107:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 108:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 109:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 112:Core/Src/usart.c ****   }
 113:Core/Src/usart.c **** }
 250              		.loc 1 113 1 view .LVU62
 251 000a 08BD     		pop	{r3, pc}
 252              	.LVL11:
 253              	.L16:
  99:Core/Src/usart.c **** 
 254              		.loc 1 99 5 is_stmt 1 view .LVU63
 255 000c 074A     		ldr	r2, .L17+4
 256 000e 136C     		ldr	r3, [r2, #64]
 257 0010 23F40033 		bic	r3, r3, #131072
 258 0014 1364     		str	r3, [r2, #64]
 105:Core/Src/usart.c **** 
 259              		.loc 1 105 5 view .LVU64
 260 0016 0C21     		movs	r1, #12
 261 0018 0548     		ldr	r0, .L17+8
 262              	.LVL12:
 105:Core/Src/usart.c **** 
ARM GAS  /tmp/ccBwLu3P.s 			page 8


 263              		.loc 1 105 5 is_stmt 0 view .LVU65
 264 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 265              	.LVL13:
 108:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 266              		.loc 1 108 5 is_stmt 1 view .LVU66
 267 001e 2620     		movs	r0, #38
 268 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 269              	.LVL14:
 270              		.loc 1 113 1 is_stmt 0 view .LVU67
 271 0024 F1E7     		b	.L13
 272              	.L18:
 273 0026 00BF     		.align	2
 274              	.L17:
 275 0028 00440040 		.word	1073759232
 276 002c 00380240 		.word	1073887232
 277 0030 00000240 		.word	1073872896
 278              		.cfi_endproc
 279              	.LFE132:
 281              		.global	huart2
 282              		.section	.bss.huart2,"aw",%nobits
 283              		.align	2
 284              		.set	.LANCHOR0,. + 0
 287              	huart2:
 288 0000 00000000 		.space	68
 288      00000000 
 288      00000000 
 288      00000000 
 288      00000000 
 289              		.text
 290              	.Letext0:
 291              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 292              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 293              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 294              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 295              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 296              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 297              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 298              		.file 9 "Core/Inc/main.h"
 299              		.file 10 "Core/Inc/usart.h"
ARM GAS  /tmp/ccBwLu3P.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccBwLu3P.s:18     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccBwLu3P.s:26     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccBwLu3P.s:85     .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccBwLu3P.s:91     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccBwLu3P.s:98     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccBwLu3P.s:215    .text.HAL_UART_MspInit:0000000000000074 $d
     /tmp/ccBwLu3P.s:221    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccBwLu3P.s:228    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccBwLu3P.s:275    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccBwLu3P.s:287    .bss.huart2:0000000000000000 huart2
     /tmp/ccBwLu3P.s:283    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
