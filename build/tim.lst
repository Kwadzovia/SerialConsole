ARM GAS  /tmp/ccgjMMyS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_TIM1_Init:
  27              	.LFB130:
  28              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM1 init function */
  30:Core/Src/tim.c **** void MX_TIM1_Init(void)
ARM GAS  /tmp/ccgjMMyS.s 			page 2


  31:Core/Src/tim.c **** {
  29              		.loc 1 31 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 88
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 96B0     		sub	sp, sp, #88
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 96
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  41              		.loc 1 37 3 view .LVU1
  42              		.loc 1 37 26 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 1294     		str	r4, [sp, #72]
  45 0008 1394     		str	r4, [sp, #76]
  46 000a 1494     		str	r4, [sp, #80]
  47 000c 1594     		str	r4, [sp, #84]
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  48              		.loc 1 38 3 is_stmt 1 view .LVU3
  49              		.loc 1 38 27 is_stmt 0 view .LVU4
  50 000e 1094     		str	r4, [sp, #64]
  51 0010 1194     		str	r4, [sp, #68]
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  52              		.loc 1 39 3 is_stmt 1 view .LVU5
  53              		.loc 1 39 22 is_stmt 0 view .LVU6
  54 0012 0994     		str	r4, [sp, #36]
  55 0014 0A94     		str	r4, [sp, #40]
  56 0016 0B94     		str	r4, [sp, #44]
  57 0018 0C94     		str	r4, [sp, #48]
  58 001a 0D94     		str	r4, [sp, #52]
  59 001c 0E94     		str	r4, [sp, #56]
  60 001e 0F94     		str	r4, [sp, #60]
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  61              		.loc 1 40 3 is_stmt 1 view .LVU7
  62              		.loc 1 40 34 is_stmt 0 view .LVU8
  63 0020 2022     		movs	r2, #32
  64 0022 2146     		mov	r1, r4
  65 0024 01A8     		add	r0, sp, #4
  66 0026 FFF7FEFF 		bl	memset
  67              	.LVL0:
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  45:Core/Src/tim.c ****   htim1.Instance = TIM1;
  68              		.loc 1 45 3 is_stmt 1 view .LVU9
  69              		.loc 1 45 18 is_stmt 0 view .LVU10
  70 002a 2A48     		ldr	r0, .L15
ARM GAS  /tmp/ccgjMMyS.s 			page 3


  71 002c 2A4B     		ldr	r3, .L15+4
  72 002e 0360     		str	r3, [r0]
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  73              		.loc 1 46 3 is_stmt 1 view .LVU11
  74              		.loc 1 46 24 is_stmt 0 view .LVU12
  75 0030 4460     		str	r4, [r0, #4]
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  76              		.loc 1 47 3 is_stmt 1 view .LVU13
  77              		.loc 1 47 26 is_stmt 0 view .LVU14
  78 0032 8460     		str	r4, [r0, #8]
  48:Core/Src/tim.c ****   htim1.Init.Period = 65535;
  79              		.loc 1 48 3 is_stmt 1 view .LVU15
  80              		.loc 1 48 21 is_stmt 0 view .LVU16
  81 0034 4FF6FF73 		movw	r3, #65535
  82 0038 C360     		str	r3, [r0, #12]
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  83              		.loc 1 49 3 is_stmt 1 view .LVU17
  84              		.loc 1 49 28 is_stmt 0 view .LVU18
  85 003a 0461     		str	r4, [r0, #16]
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  86              		.loc 1 50 3 is_stmt 1 view .LVU19
  87              		.loc 1 50 32 is_stmt 0 view .LVU20
  88 003c 4461     		str	r4, [r0, #20]
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  89              		.loc 1 51 3 is_stmt 1 view .LVU21
  90              		.loc 1 51 32 is_stmt 0 view .LVU22
  91 003e 8461     		str	r4, [r0, #24]
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  92              		.loc 1 52 3 is_stmt 1 view .LVU23
  93              		.loc 1 52 7 is_stmt 0 view .LVU24
  94 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
  95              	.LVL1:
  96              		.loc 1 52 6 view .LVU25
  97 0044 0028     		cmp	r0, #0
  98 0046 33D1     		bne	.L9
  99              	.L2:
  53:Core/Src/tim.c ****   {
  54:Core/Src/tim.c ****     Error_Handler();
  55:Core/Src/tim.c ****   }
  56:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 100              		.loc 1 56 3 is_stmt 1 view .LVU26
 101              		.loc 1 56 34 is_stmt 0 view .LVU27
 102 0048 4FF48053 		mov	r3, #4096
 103 004c 1293     		str	r3, [sp, #72]
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 104              		.loc 1 57 3 is_stmt 1 view .LVU28
 105              		.loc 1 57 7 is_stmt 0 view .LVU29
 106 004e 12A9     		add	r1, sp, #72
 107 0050 2048     		ldr	r0, .L15
 108 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 109              	.LVL2:
 110              		.loc 1 57 6 view .LVU30
 111 0056 0028     		cmp	r0, #0
 112 0058 2DD1     		bne	.L10
 113              	.L3:
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
ARM GAS  /tmp/ccgjMMyS.s 			page 4


  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 114              		.loc 1 61 3 is_stmt 1 view .LVU31
 115              		.loc 1 61 7 is_stmt 0 view .LVU32
 116 005a 1E48     		ldr	r0, .L15
 117 005c FFF7FEFF 		bl	HAL_TIM_OC_Init
 118              	.LVL3:
 119              		.loc 1 61 6 view .LVU33
 120 0060 0028     		cmp	r0, #0
 121 0062 2BD1     		bne	.L11
 122              	.L4:
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 123              		.loc 1 65 3 is_stmt 1 view .LVU34
 124              		.loc 1 65 37 is_stmt 0 view .LVU35
 125 0064 0023     		movs	r3, #0
 126 0066 1093     		str	r3, [sp, #64]
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 127              		.loc 1 66 3 is_stmt 1 view .LVU36
 128              		.loc 1 66 33 is_stmt 0 view .LVU37
 129 0068 1193     		str	r3, [sp, #68]
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 130              		.loc 1 67 3 is_stmt 1 view .LVU38
 131              		.loc 1 67 7 is_stmt 0 view .LVU39
 132 006a 10A9     		add	r1, sp, #64
 133 006c 1948     		ldr	r0, .L15
 134 006e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 135              	.LVL4:
 136              		.loc 1 67 6 view .LVU40
 137 0072 30BB     		cbnz	r0, .L12
 138              	.L5:
  68:Core/Src/tim.c ****   {
  69:Core/Src/tim.c ****     Error_Handler();
  70:Core/Src/tim.c ****   }
  71:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 139              		.loc 1 71 3 is_stmt 1 view .LVU41
 140              		.loc 1 71 20 is_stmt 0 view .LVU42
 141 0074 0022     		movs	r2, #0
 142 0076 0992     		str	r2, [sp, #36]
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 143              		.loc 1 72 3 is_stmt 1 view .LVU43
 144              		.loc 1 72 19 is_stmt 0 view .LVU44
 145 0078 0A92     		str	r2, [sp, #40]
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 146              		.loc 1 73 3 is_stmt 1 view .LVU45
 147              		.loc 1 73 24 is_stmt 0 view .LVU46
 148 007a 0B92     		str	r2, [sp, #44]
  74:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 149              		.loc 1 74 3 is_stmt 1 view .LVU47
 150              		.loc 1 74 25 is_stmt 0 view .LVU48
 151 007c 0C92     		str	r2, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 152              		.loc 1 75 3 is_stmt 1 view .LVU49
 153              		.loc 1 75 24 is_stmt 0 view .LVU50
 154 007e 0D92     		str	r2, [sp, #52]
ARM GAS  /tmp/ccgjMMyS.s 			page 5


  76:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 155              		.loc 1 76 3 is_stmt 1 view .LVU51
 156              		.loc 1 76 25 is_stmt 0 view .LVU52
 157 0080 0E92     		str	r2, [sp, #56]
  77:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 158              		.loc 1 77 3 is_stmt 1 view .LVU53
 159              		.loc 1 77 26 is_stmt 0 view .LVU54
 160 0082 0F92     		str	r2, [sp, #60]
  78:Core/Src/tim.c ****   if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 161              		.loc 1 78 3 is_stmt 1 view .LVU55
 162              		.loc 1 78 7 is_stmt 0 view .LVU56
 163 0084 09A9     		add	r1, sp, #36
 164 0086 1348     		ldr	r0, .L15
 165 0088 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 166              	.LVL5:
 167              		.loc 1 78 6 view .LVU57
 168 008c E0B9     		cbnz	r0, .L13
 169              	.L6:
  79:Core/Src/tim.c ****   {
  80:Core/Src/tim.c ****     Error_Handler();
  81:Core/Src/tim.c ****   }
  82:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 170              		.loc 1 82 3 is_stmt 1 view .LVU58
 171              		.loc 1 82 40 is_stmt 0 view .LVU59
 172 008e 0023     		movs	r3, #0
 173 0090 0193     		str	r3, [sp, #4]
  83:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 174              		.loc 1 83 3 is_stmt 1 view .LVU60
 175              		.loc 1 83 41 is_stmt 0 view .LVU61
 176 0092 0293     		str	r3, [sp, #8]
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 177              		.loc 1 84 3 is_stmt 1 view .LVU62
 178              		.loc 1 84 34 is_stmt 0 view .LVU63
 179 0094 0393     		str	r3, [sp, #12]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 180              		.loc 1 85 3 is_stmt 1 view .LVU64
 181              		.loc 1 85 33 is_stmt 0 view .LVU65
 182 0096 0493     		str	r3, [sp, #16]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 183              		.loc 1 86 3 is_stmt 1 view .LVU66
 184              		.loc 1 86 35 is_stmt 0 view .LVU67
 185 0098 0593     		str	r3, [sp, #20]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 186              		.loc 1 87 3 is_stmt 1 view .LVU68
 187              		.loc 1 87 38 is_stmt 0 view .LVU69
 188 009a 4FF40052 		mov	r2, #8192
 189 009e 0692     		str	r2, [sp, #24]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 190              		.loc 1 88 3 is_stmt 1 view .LVU70
 191              		.loc 1 88 40 is_stmt 0 view .LVU71
 192 00a0 0893     		str	r3, [sp, #32]
  89:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 193              		.loc 1 89 3 is_stmt 1 view .LVU72
 194              		.loc 1 89 7 is_stmt 0 view .LVU73
 195 00a2 01A9     		add	r1, sp, #4
 196 00a4 0B48     		ldr	r0, .L15
 197 00a6 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
ARM GAS  /tmp/ccgjMMyS.s 			page 6


 198              	.LVL6:
 199              		.loc 1 89 6 view .LVU74
 200 00aa 80B9     		cbnz	r0, .L14
 201              	.L1:
  90:Core/Src/tim.c ****   {
  91:Core/Src/tim.c ****     Error_Handler();
  92:Core/Src/tim.c ****   }
  93:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
  94:Core/Src/tim.c **** 
  95:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c **** }
 202              		.loc 1 97 1 view .LVU75
 203 00ac 16B0     		add	sp, sp, #88
 204              	.LCFI2:
 205              		.cfi_remember_state
 206              		.cfi_def_cfa_offset 8
 207              		@ sp needed
 208 00ae 10BD     		pop	{r4, pc}
 209              	.L9:
 210              	.LCFI3:
 211              		.cfi_restore_state
  54:Core/Src/tim.c ****   }
 212              		.loc 1 54 5 is_stmt 1 view .LVU76
 213 00b0 FFF7FEFF 		bl	Error_Handler
 214              	.LVL7:
 215 00b4 C8E7     		b	.L2
 216              	.L10:
  59:Core/Src/tim.c ****   }
 217              		.loc 1 59 5 view .LVU77
 218 00b6 FFF7FEFF 		bl	Error_Handler
 219              	.LVL8:
 220 00ba CEE7     		b	.L3
 221              	.L11:
  63:Core/Src/tim.c ****   }
 222              		.loc 1 63 5 view .LVU78
 223 00bc FFF7FEFF 		bl	Error_Handler
 224              	.LVL9:
 225 00c0 D0E7     		b	.L4
 226              	.L12:
  69:Core/Src/tim.c ****   }
 227              		.loc 1 69 5 view .LVU79
 228 00c2 FFF7FEFF 		bl	Error_Handler
 229              	.LVL10:
 230 00c6 D5E7     		b	.L5
 231              	.L13:
  80:Core/Src/tim.c ****   }
 232              		.loc 1 80 5 view .LVU80
 233 00c8 FFF7FEFF 		bl	Error_Handler
 234              	.LVL11:
 235 00cc DFE7     		b	.L6
 236              	.L14:
  91:Core/Src/tim.c ****   }
 237              		.loc 1 91 5 view .LVU81
 238 00ce FFF7FEFF 		bl	Error_Handler
 239              	.LVL12:
 240              		.loc 1 97 1 is_stmt 0 view .LVU82
ARM GAS  /tmp/ccgjMMyS.s 			page 7


 241 00d2 EBE7     		b	.L1
 242              	.L16:
 243              		.align	2
 244              	.L15:
 245 00d4 00000000 		.word	.LANCHOR0
 246 00d8 00000140 		.word	1073807360
 247              		.cfi_endproc
 248              	.LFE130:
 250              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 251              		.align	1
 252              		.global	HAL_TIM_Base_MspInit
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	HAL_TIM_Base_MspInit:
 259              	.LVL13:
 260              	.LFB131:
  98:Core/Src/tim.c **** 
  99:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 100:Core/Src/tim.c **** {
 261              		.loc 1 100 1 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 266              		.loc 1 102 3 view .LVU84
 267              		.loc 1 102 20 is_stmt 0 view .LVU85
 268 0000 0268     		ldr	r2, [r0]
 269              		.loc 1 102 5 view .LVU86
 270 0002 094B     		ldr	r3, .L24
 271 0004 9A42     		cmp	r2, r3
 272 0006 00D0     		beq	.L23
 273 0008 7047     		bx	lr
 274              	.L23:
 100:Core/Src/tim.c **** 
 275              		.loc 1 100 1 view .LVU87
 276 000a 82B0     		sub	sp, sp, #8
 277              	.LCFI4:
 278              		.cfi_def_cfa_offset 8
 103:Core/Src/tim.c ****   {
 104:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 107:Core/Src/tim.c ****     /* TIM1 clock enable */
 108:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 279              		.loc 1 108 5 is_stmt 1 view .LVU88
 280              	.LBB2:
 281              		.loc 1 108 5 view .LVU89
 282 000c 0023     		movs	r3, #0
 283 000e 0193     		str	r3, [sp, #4]
 284              		.loc 1 108 5 view .LVU90
 285 0010 064B     		ldr	r3, .L24+4
 286 0012 5A6C     		ldr	r2, [r3, #68]
 287 0014 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccgjMMyS.s 			page 8


 288 0018 5A64     		str	r2, [r3, #68]
 289              		.loc 1 108 5 view .LVU91
 290 001a 5B6C     		ldr	r3, [r3, #68]
 291 001c 03F00103 		and	r3, r3, #1
 292 0020 0193     		str	r3, [sp, #4]
 293              		.loc 1 108 5 view .LVU92
 294 0022 019B     		ldr	r3, [sp, #4]
 295              	.LBE2:
 296              		.loc 1 108 5 view .LVU93
 109:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 112:Core/Src/tim.c ****   }
 113:Core/Src/tim.c **** }
 297              		.loc 1 113 1 is_stmt 0 view .LVU94
 298 0024 02B0     		add	sp, sp, #8
 299              	.LCFI5:
 300              		.cfi_def_cfa_offset 0
 301              		@ sp needed
 302 0026 7047     		bx	lr
 303              	.L25:
 304              		.align	2
 305              	.L24:
 306 0028 00000140 		.word	1073807360
 307 002c 00380240 		.word	1073887232
 308              		.cfi_endproc
 309              	.LFE131:
 311              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 312              		.align	1
 313              		.global	HAL_TIM_Base_MspDeInit
 314              		.syntax unified
 315              		.thumb
 316              		.thumb_func
 317              		.fpu fpv4-sp-d16
 319              	HAL_TIM_Base_MspDeInit:
 320              	.LVL14:
 321              	.LFB132:
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 116:Core/Src/tim.c **** {
 322              		.loc 1 116 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 117:Core/Src/tim.c **** 
 118:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 327              		.loc 1 118 3 view .LVU96
 328              		.loc 1 118 20 is_stmt 0 view .LVU97
 329 0000 0268     		ldr	r2, [r0]
 330              		.loc 1 118 5 view .LVU98
 331 0002 054B     		ldr	r3, .L29
 332 0004 9A42     		cmp	r2, r3
 333 0006 00D0     		beq	.L28
 334              	.L26:
 119:Core/Src/tim.c ****   {
 120:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
ARM GAS  /tmp/ccgjMMyS.s 			page 9


 121:Core/Src/tim.c **** 
 122:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 123:Core/Src/tim.c ****     /* Peripheral clock disable */
 124:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 125:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 126:Core/Src/tim.c **** 
 127:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 128:Core/Src/tim.c ****   }
 129:Core/Src/tim.c **** }
 335              		.loc 1 129 1 view .LVU99
 336 0008 7047     		bx	lr
 337              	.L28:
 124:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 338              		.loc 1 124 5 is_stmt 1 view .LVU100
 339 000a 044A     		ldr	r2, .L29+4
 340 000c 536C     		ldr	r3, [r2, #68]
 341 000e 23F00103 		bic	r3, r3, #1
 342 0012 5364     		str	r3, [r2, #68]
 343              		.loc 1 129 1 is_stmt 0 view .LVU101
 344 0014 F8E7     		b	.L26
 345              	.L30:
 346 0016 00BF     		.align	2
 347              	.L29:
 348 0018 00000140 		.word	1073807360
 349 001c 00380240 		.word	1073887232
 350              		.cfi_endproc
 351              	.LFE132:
 353              		.global	htim1
 354              		.section	.bss.htim1,"aw",%nobits
 355              		.align	2
 356              		.set	.LANCHOR0,. + 0
 359              	htim1:
 360 0000 00000000 		.space	72
 360      00000000 
 360      00000000 
 360      00000000 
 360      00000000 
 361              		.text
 362              	.Letext0:
 363              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 364              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 365              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 366              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 367              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 368              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 369              		.file 8 "Core/Inc/main.h"
 370              		.file 9 "Core/Inc/tim.h"
 371              		.file 10 "<built-in>"
ARM GAS  /tmp/ccgjMMyS.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccgjMMyS.s:18     .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccgjMMyS.s:26     .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccgjMMyS.s:245    .text.MX_TIM1_Init:00000000000000d4 $d
     /tmp/ccgjMMyS.s:251    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccgjMMyS.s:258    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccgjMMyS.s:306    .text.HAL_TIM_Base_MspInit:0000000000000028 $d
     /tmp/ccgjMMyS.s:312    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccgjMMyS.s:319    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccgjMMyS.s:348    .text.HAL_TIM_Base_MspDeInit:0000000000000018 $d
     /tmp/ccgjMMyS.s:359    .bss.htim1:0000000000000000 htim1
     /tmp/ccgjMMyS.s:355    .bss.htim1:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
Error_Handler
