ARM GAS  /tmp/ccFdgAcN.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB135:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "spi.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** #include <stdio.h>
  26:Core/Src/main.c **** #include <string.h>
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "led.h"
  30:Core/Src/main.c **** #include "console.h"
ARM GAS  /tmp/ccFdgAcN.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /**
  66:Core/Src/main.c ****   * @brief  The application entry point.
  67:Core/Src/main.c ****   * @retval int
  68:Core/Src/main.c ****   */
  69:Core/Src/main.c **** int main(void)
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccFdgAcN.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_SPI2_Init();
  95:Core/Src/main.c ****   MX_TIM1_Init();
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c ****   consoleInit();
  99:Core/Src/main.c ****  /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 108:Core/Src/main.c ****     //HAL_UART_Receive(&huart2,aui8RxBuffer,10,500);
 109:Core/Src/main.c ****     
 110:Core/Src/main.c ****     consoleUpdate();
 111:Core/Src/main.c ****     led_update();
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c ****   /* USER CODE END 3 */
 114:Core/Src/main.c **** }
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**
 117:Core/Src/main.c ****   * @brief System Clock Configuration
 118:Core/Src/main.c ****   * @retval None
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c **** void SystemClock_Config(void)
 121:Core/Src/main.c **** {
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 126:Core/Src/main.c ****   */
 127:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 128:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****   */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 144:Core/Src/main.c ****   {
ARM GAS  /tmp/ccFdgAcN.s 			page 4


 145:Core/Src/main.c ****     Error_Handler();
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /* USER CODE END 4 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c **** /**
 168:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 169:Core/Src/main.c ****   * @retval None
 170:Core/Src/main.c ****   */
 171:Core/Src/main.c **** void Error_Handler(void)
 172:Core/Src/main.c **** {
  29              		.loc 1 172 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 173:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 174:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 175:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 175 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/ccFdgAcN.s 			page 5


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccFdgAcN.s 			page 6


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccFdgAcN.s 			page 7


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 176:Core/Src/main.c ****   while (1)
  51              		.loc 1 176 3 discriminator 1 view .LVU4
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****   }
  52              		.loc 1 178 3 discriminator 1 view .LVU5
 176:Core/Src/main.c ****   while (1)
  53              		.loc 1 176 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE135:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB134:
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 121 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 122 3 view .LVU8
ARM GAS  /tmp/ccFdgAcN.s 			page 8


 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 122 22 is_stmt 0 view .LVU9
  81 0004 3422     		movs	r2, #52
  82 0006 0021     		movs	r1, #0
  83 0008 07A8     		add	r0, sp, #28
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 123:Core/Src/main.c **** 
  86              		.loc 1 123 3 is_stmt 1 view .LVU10
 123:Core/Src/main.c **** 
  87              		.loc 1 123 22 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0293     		str	r3, [sp, #8]
  90 0012 0393     		str	r3, [sp, #12]
  91 0014 0493     		str	r3, [sp, #16]
  92 0016 0593     		str	r3, [sp, #20]
  93 0018 0693     		str	r3, [sp, #24]
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  94              		.loc 1 127 3 is_stmt 1 view .LVU12
  95              	.LBB6:
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  96              		.loc 1 127 3 view .LVU13
  97 001a 0093     		str	r3, [sp]
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
  98              		.loc 1 127 3 view .LVU14
  99 001c 1F4A     		ldr	r2, .L9
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 103              		.loc 1 127 3 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0092     		str	r2, [sp]
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 107              		.loc 1 127 3 view .LVU16
 108 002e 009A     		ldr	r2, [sp]
 109              	.LBE6:
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 110              		.loc 1 127 3 view .LVU17
 128:Core/Src/main.c **** 
 111              		.loc 1 128 3 view .LVU18
 112              	.LBB7:
 128:Core/Src/main.c **** 
 113              		.loc 1 128 3 view .LVU19
 114 0030 0193     		str	r3, [sp, #4]
 128:Core/Src/main.c **** 
 115              		.loc 1 128 3 view .LVU20
 116 0032 1B49     		ldr	r1, .L9+4
 117 0034 0A68     		ldr	r2, [r1]
 118 0036 22F44042 		bic	r2, r2, #49152
 119 003a 42F48042 		orr	r2, r2, #16384
 120 003e 0A60     		str	r2, [r1]
 128:Core/Src/main.c **** 
 121              		.loc 1 128 3 view .LVU21
 122 0040 0A68     		ldr	r2, [r1]
 123 0042 02F44042 		and	r2, r2, #49152
ARM GAS  /tmp/ccFdgAcN.s 			page 9


 124 0046 0192     		str	r2, [sp, #4]
 128:Core/Src/main.c **** 
 125              		.loc 1 128 3 view .LVU22
 126 0048 019A     		ldr	r2, [sp, #4]
 127              	.LBE7:
 128:Core/Src/main.c **** 
 128              		.loc 1 128 3 view .LVU23
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129              		.loc 1 133 3 view .LVU24
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130              		.loc 1 133 36 is_stmt 0 view .LVU25
 131 004a 0222     		movs	r2, #2
 132 004c 0792     		str	r2, [sp, #28]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 133              		.loc 1 134 3 is_stmt 1 view .LVU26
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134              		.loc 1 134 30 is_stmt 0 view .LVU27
 135 004e 0121     		movs	r1, #1
 136 0050 0A91     		str	r1, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137              		.loc 1 135 3 is_stmt 1 view .LVU28
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 138              		.loc 1 135 41 is_stmt 0 view .LVU29
 139 0052 1021     		movs	r1, #16
 140 0054 0B91     		str	r1, [sp, #44]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 141              		.loc 1 136 3 is_stmt 1 view .LVU30
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 142              		.loc 1 136 34 is_stmt 0 view .LVU31
 143 0056 0D92     		str	r2, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 144              		.loc 1 137 3 is_stmt 1 view .LVU32
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 145              		.loc 1 137 35 is_stmt 0 view .LVU33
 146 0058 0E93     		str	r3, [sp, #56]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 147              		.loc 1 138 3 is_stmt 1 view .LVU34
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 148              		.loc 1 138 30 is_stmt 0 view .LVU35
 149 005a 0F91     		str	r1, [sp, #60]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 150              		.loc 1 139 3 is_stmt 1 view .LVU36
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 151              		.loc 1 139 30 is_stmt 0 view .LVU37
 152 005c 4FF4A873 		mov	r3, #336
 153 0060 1093     		str	r3, [sp, #64]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 154              		.loc 1 140 3 is_stmt 1 view .LVU38
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 155              		.loc 1 140 30 is_stmt 0 view .LVU39
 156 0062 0423     		movs	r3, #4
 157 0064 1193     		str	r3, [sp, #68]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 158              		.loc 1 141 3 is_stmt 1 view .LVU40
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 159              		.loc 1 141 30 is_stmt 0 view .LVU41
 160 0066 1292     		str	r2, [sp, #72]
ARM GAS  /tmp/ccFdgAcN.s 			page 10


 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161              		.loc 1 142 3 is_stmt 1 view .LVU42
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162              		.loc 1 142 30 is_stmt 0 view .LVU43
 163 0068 1392     		str	r2, [sp, #76]
 143:Core/Src/main.c ****   {
 164              		.loc 1 143 3 is_stmt 1 view .LVU44
 143:Core/Src/main.c ****   {
 165              		.loc 1 143 7 is_stmt 0 view .LVU45
 166 006a 07A8     		add	r0, sp, #28
 167 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 168              	.LVL1:
 143:Core/Src/main.c ****   {
 169              		.loc 1 143 6 view .LVU46
 170 0070 80B9     		cbnz	r0, .L7
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 171              		.loc 1 150 3 is_stmt 1 view .LVU47
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172              		.loc 1 150 31 is_stmt 0 view .LVU48
 173 0072 0F23     		movs	r3, #15
 174 0074 0293     		str	r3, [sp, #8]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175              		.loc 1 152 3 is_stmt 1 view .LVU49
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176              		.loc 1 152 34 is_stmt 0 view .LVU50
 177 0076 0221     		movs	r1, #2
 178 0078 0391     		str	r1, [sp, #12]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 179              		.loc 1 153 3 is_stmt 1 view .LVU51
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 180              		.loc 1 153 35 is_stmt 0 view .LVU52
 181 007a 0023     		movs	r3, #0
 182 007c 0493     		str	r3, [sp, #16]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 183              		.loc 1 154 3 is_stmt 1 view .LVU53
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 184              		.loc 1 154 36 is_stmt 0 view .LVU54
 185 007e 4FF48052 		mov	r2, #4096
 186 0082 0592     		str	r2, [sp, #20]
 155:Core/Src/main.c **** 
 187              		.loc 1 155 3 is_stmt 1 view .LVU55
 155:Core/Src/main.c **** 
 188              		.loc 1 155 36 is_stmt 0 view .LVU56
 189 0084 0693     		str	r3, [sp, #24]
 157:Core/Src/main.c ****   {
 190              		.loc 1 157 3 is_stmt 1 view .LVU57
 157:Core/Src/main.c ****   {
 191              		.loc 1 157 7 is_stmt 0 view .LVU58
 192 0086 02A8     		add	r0, sp, #8
 193 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 194              	.LVL2:
 157:Core/Src/main.c ****   {
 195              		.loc 1 157 6 view .LVU59
 196 008c 20B9     		cbnz	r0, .L8
 161:Core/Src/main.c **** 
 197              		.loc 1 161 1 view .LVU60
 198 008e 15B0     		add	sp, sp, #84
ARM GAS  /tmp/ccFdgAcN.s 			page 11


 199              	.LCFI2:
 200              		.cfi_remember_state
 201              		.cfi_def_cfa_offset 4
 202              		@ sp needed
 203 0090 5DF804FB 		ldr	pc, [sp], #4
 204              	.L7:
 205              	.LCFI3:
 206              		.cfi_restore_state
 145:Core/Src/main.c ****   }
 207              		.loc 1 145 5 is_stmt 1 view .LVU61
 208 0094 FFF7FEFF 		bl	Error_Handler
 209              	.LVL3:
 210              	.L8:
 159:Core/Src/main.c ****   }
 211              		.loc 1 159 5 view .LVU62
 212 0098 FFF7FEFF 		bl	Error_Handler
 213              	.LVL4:
 214              	.L10:
 215              		.align	2
 216              	.L9:
 217 009c 00380240 		.word	1073887232
 218 00a0 00700040 		.word	1073770496
 219              		.cfi_endproc
 220              	.LFE134:
 222              		.section	.text.main,"ax",%progbits
 223              		.align	1
 224              		.global	main
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	main:
 231              	.LFB133:
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 232              		.loc 1 70 1 view -0
 233              		.cfi_startproc
 234              		@ Volatile: function does not return.
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 242              		.loc 1 78 3 view .LVU64
 243 0002 FFF7FEFF 		bl	HAL_Init
 244              	.LVL5:
  86:Core/Src/main.c **** 
 245              		.loc 1 86 3 view .LVU65
 246 0006 FFF7FEFF 		bl	SystemClock_Config
 247              	.LVL6:
  93:Core/Src/main.c ****   MX_SPI2_Init();
 248              		.loc 1 93 3 view .LVU66
 249 000a FFF7FEFF 		bl	MX_GPIO_Init
 250              	.LVL7:
  94:Core/Src/main.c ****   MX_TIM1_Init();
ARM GAS  /tmp/ccFdgAcN.s 			page 12


 251              		.loc 1 94 3 view .LVU67
 252 000e FFF7FEFF 		bl	MX_SPI2_Init
 253              	.LVL8:
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
 254              		.loc 1 95 3 view .LVU68
 255 0012 FFF7FEFF 		bl	MX_TIM1_Init
 256              	.LVL9:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 257              		.loc 1 96 3 view .LVU69
 258 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 259              	.LVL10:
  98:Core/Src/main.c ****  /* USER CODE END 2 */
 260              		.loc 1 98 3 view .LVU70
 261 001a FFF7FEFF 		bl	consoleInit
 262              	.LVL11:
 263              	.L12:
 103:Core/Src/main.c ****   {
 264              		.loc 1 103 3 discriminator 1 view .LVU71
 110:Core/Src/main.c ****     led_update();
 265              		.loc 1 110 5 discriminator 1 view .LVU72
 266 001e FFF7FEFF 		bl	consoleUpdate
 267              	.LVL12:
 111:Core/Src/main.c ****   }
 268              		.loc 1 111 5 discriminator 1 view .LVU73
 269 0022 FFF7FEFF 		bl	led_update
 270              	.LVL13:
 103:Core/Src/main.c ****   {
 271              		.loc 1 103 9 discriminator 1 view .LVU74
 272 0026 FAE7     		b	.L12
 273              		.cfi_endproc
 274              	.LFE133:
 276              		.text
 277              	.Letext0:
 278              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 279              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 280              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 281              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 282              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 283              		.file 8 "Core/Inc/gpio.h"
 284              		.file 9 "Core/Inc/spi.h"
 285              		.file 10 "Core/Inc/tim.h"
 286              		.file 11 "Core/Inc/usart.h"
 287              		.file 12 "Core/Inc/console.h"
 288              		.file 13 "Core/Inc/led.h"
 289              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 290              		.file 15 "<built-in>"
ARM GAS  /tmp/ccFdgAcN.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccFdgAcN.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccFdgAcN.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccFdgAcN.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccFdgAcN.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccFdgAcN.s:217    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccFdgAcN.s:223    .text.main:0000000000000000 $t
     /tmp/ccFdgAcN.s:230    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI2_Init
MX_TIM1_Init
MX_USART2_UART_Init
consoleInit
consoleUpdate
led_update
